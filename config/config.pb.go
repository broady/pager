// Code generated by protoc-gen-go.
// source: config.proto
// DO NOT EDIT!

package config

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type PagerConfig struct {
	Rule             []*Matcher `protobuf:"bytes,1,rep,name=rule" json:"rule,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *PagerConfig) Reset()         { *m = PagerConfig{} }
func (m *PagerConfig) String() string { return proto.CompactTextString(m) }
func (*PagerConfig) ProtoMessage()    {}

func (m *PagerConfig) GetRule() []*Matcher {
	if m != nil {
		return m.Rule
	}
	return nil
}

type Matcher struct {
	// ID of a Pager
	Pager []string `protobuf:"bytes,1,rep,name=pager" json:"pager,omitempty"`
	// Regex match on the e-mail's sender.
	Sender []*StringMatch `protobuf:"bytes,2,rep,name=sender" json:"sender,omitempty"`
	// Current time is within one of the time ranges.
	Time []*TimeRange `protobuf:"bytes,3,rep,name=time" json:"time,omitempty"`
	// Match the subject of the e-mail.
	Subject []*StringMatch `protobuf:"bytes,4,rep,name=subject" json:"subject,omitempty"`
	// Match the body of the e-mail.
	Body []*StringMatch `protobuf:"bytes,5,rep,name=body" json:"body,omitempty"`
	// E-mail tag (e.g. "cpu" in chris+cpu).
	Tag              []*StringMatch `protobuf:"bytes,6,rep,name=tag" json:"tag,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *Matcher) Reset()         { *m = Matcher{} }
func (m *Matcher) String() string { return proto.CompactTextString(m) }
func (*Matcher) ProtoMessage()    {}

func (m *Matcher) GetPager() []string {
	if m != nil {
		return m.Pager
	}
	return nil
}

func (m *Matcher) GetSender() []*StringMatch {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *Matcher) GetTime() []*TimeRange {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *Matcher) GetSubject() []*StringMatch {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Matcher) GetBody() []*StringMatch {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *Matcher) GetTag() []*StringMatch {
	if m != nil {
		return m.Tag
	}
	return nil
}

type StringMatch struct {
	Substring        *string `protobuf:"bytes,1,opt,name=substring" json:"substring,omitempty"`
	Regex            *string `protobuf:"bytes,2,opt,name=regex" json:"regex,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *StringMatch) Reset()         { *m = StringMatch{} }
func (m *StringMatch) String() string { return proto.CompactTextString(m) }
func (*StringMatch) ProtoMessage()    {}

func (m *StringMatch) GetSubstring() string {
	if m != nil && m.Substring != nil {
		return *m.Substring
	}
	return ""
}

func (m *StringMatch) GetRegex() string {
	if m != nil && m.Regex != nil {
		return *m.Regex
	}
	return ""
}

type TimeRange struct {
	// Number between 0000 and 2359
	From             *uint32 `protobuf:"varint,1,req,name=from" json:"from,omitempty"`
	To               *uint32 `protobuf:"varint,2,req,name=to" json:"to,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TimeRange) Reset()         { *m = TimeRange{} }
func (m *TimeRange) String() string { return proto.CompactTextString(m) }
func (*TimeRange) ProtoMessage()    {}

func (m *TimeRange) GetFrom() uint32 {
	if m != nil && m.From != nil {
		return *m.From
	}
	return 0
}

func (m *TimeRange) GetTo() uint32 {
	if m != nil && m.To != nil {
		return *m.To
	}
	return 0
}

type Contact struct {
	// Timeout for this contact, in seconds.
	Timeout          *uint64 `protobuf:"varint,1,opt,name=timeout" json:"timeout,omitempty"`
	Email            *string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Phone            *string `protobuf:"bytes,3,opt,name=phone" json:"phone,omitempty"`
	Sms              *string `protobuf:"bytes,4,opt,name=sms" json:"sms,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Contact) Reset()         { *m = Contact{} }
func (m *Contact) String() string { return proto.CompactTextString(m) }
func (*Contact) ProtoMessage()    {}

func (m *Contact) GetTimeout() uint64 {
	if m != nil && m.Timeout != nil {
		return *m.Timeout
	}
	return 0
}

func (m *Contact) GetEmail() string {
	if m != nil && m.Email != nil {
		return *m.Email
	}
	return ""
}

func (m *Contact) GetPhone() string {
	if m != nil && m.Phone != nil {
		return *m.Phone
	}
	return ""
}

func (m *Contact) GetSms() string {
	if m != nil && m.Sms != nil {
		return *m.Sms
	}
	return ""
}

type NotificationSequence struct {
	Contact          []*Contact `protobuf:"bytes,1,rep,name=contact" json:"contact,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *NotificationSequence) Reset()         { *m = NotificationSequence{} }
func (m *NotificationSequence) String() string { return proto.CompactTextString(m) }
func (*NotificationSequence) ProtoMessage()    {}

func (m *NotificationSequence) GetContact() []*Contact {
	if m != nil {
		return m.Contact
	}
	return nil
}

func init() {
}
